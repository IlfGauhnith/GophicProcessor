services:
  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./resource/migrations:/docker-entrypoint-initdb.d # Migrations DIR
      - ./resource/scripts:/custom-scripts
    networks:
      - gophic-network

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - gophic-network

  api:
    build:
      context: .
      dockerfile: ./cmd/api/Dockerfile
    restart: always
    depends_on:
      - db
      - rabbitmq
      - graylog
    ports:
      - "8080:8080"
    environment:
      DB_HOST: db
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      MQ_URL: amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GRAYLOG_ADDR: ${GRAYLOG_ADDR}
    networks:
      - gophic-network
    volumes:
      - gophic_log:/app/logs

  worker:
    build:
      context: .
      dockerfile: ./cmd/worker/Dockerfile
    restart: always
    depends_on:
      - db
      - rabbitmq
      - graylog
    ports:
      - "6060:6060" # pprof server
    environment:
      DB_HOST: db
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      MQ_URL: amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/
      GRAYLOG_ADDR: ${GRAYLOG_ADDR}
    networks:
      - gophic-network
    volumes:
      - gophic_log:/app/logs
  mongodb:
    image: mongo:4.2
    volumes:
      - mongo_data:/data/db
    networks:
      - gophic-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - gophic-network

  graylog:
    image: graylog/graylog:4.0
    environment:
      GRAYLOG_PASSWORD_SECRET: ${GRAYLOG_PASSWORD_SALT}
      GRAYLOG_ROOT_PASSWORD_SHA2: ${GRAYLOG_ROOT_PASSWORD_SHA2}
      
      # External URL at which the Graylog web interface can be accessed. 
      # Itâ€™s used by Graylog to generate links and references within its UI and emails.
      GRAYLOG_HTTP_EXTERNAL_URI: http://localhost:9000/

      GRAYLOG_MONGODB_URI: mongodb://mongodb:27017/graylog
      GRAYLOG_MONGO_URI: mongodb://mongodb:27017/graylog
      GRAYLOG_ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      
    depends_on:
      elasticsearch:
        condition: service_healthy
      mongodb:
        condition: service_started
    ports:
      - "9000:9000"   # Graylog web interface
      - "12201:12201/udp"  # GELF UDP input
    networks:
      - gophic-network

networks:
  gophic-network:
    driver: bridge

volumes:
  db_data:
  gophic_log:
  mongo_data:
  es_data:
